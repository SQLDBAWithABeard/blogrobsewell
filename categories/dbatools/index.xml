<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dbatools on Rob Sewell (aka SQL DBA With A Beard)</title><link>https://blog.robsewell.com/categories/dbatools/</link><description>Recent content in Dbatools on Rob Sewell (aka SQL DBA With A Beard)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.robsewell.com/categories/dbatools/index.xml" rel="self" type="application/rss+xml"/><item><title>How to import dbatools from a zip file from the GitHub release into Azure Automation Modules without an error</title><link>https://blog.robsewell.com/blog/how-to-import-dbatools-from-a-zip-file-from-the-github-release-into-azure-automation-modules-without-an-error/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/how-to-import-dbatools-from-a-zip-file-from-the-github-release-into-azure-automation-modules-without-an-error/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2022/dbatools.jpg" alt="Featured image of post How to import dbatools from a zip file from the GitHub release into Azure Automation Modules without an error" /&gt;&lt;p&gt;There are a number of methods to import PowerShell modules into Azure automation &lt;a class="link" href="https://docs.microsoft.com/en-us/azure/automation/shared-resources/modules?WT.mc_id=DP-MVP-5002693" target="_blank" rel="noopener"
&gt;as described in the documentation here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may however miss an important piece of information hidden in that documentation if you are uploading a module from a GitHub release instead of via the &lt;a class="link" href="https://www.powershellgallery.com/?WT.mc_id=DP-MVP-5002693" target="_blank" rel="noopener"
&gt;PowerShell Gallery&lt;/a&gt;. The name that you refer to the module must match the module name and module folder name in the zip file.&lt;/p&gt;
&lt;h1 id="method-one---from-gallery"&gt;Method one - from Gallery
&lt;/h1&gt;&lt;p&gt;This is my preferred method for importing modules into Azure Automation accounts, the only bothersome part is remembering to do it twice, once for 5.1 and once for 7.1 as I am sure that if I forget that will be the one module that I will need!&lt;/p&gt;</description></item><item><title>Quickly Creating Test Users in SQL Server using dbatools</title><link>https://blog.robsewell.com/blog/quickly-creating-test-users-in-sql-server-using-dbatools/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/quickly-creating-test-users-in-sql-server-using-dbatools/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2017/02/remove-them-all.png" alt="Featured image of post Quickly Creating Test Users in SQL Server using dbatools" /&gt;</description></item><item><title>Creating Azure SQL Database AAD Contained Database Users with an SPN using PowerShell, Secrets Management, Azure Key Vault, and dbatools</title><link>https://blog.robsewell.com/blog/creating-azure-sql-database-aad-contained-database-users-with-an-spn-using-powershell-secrets-management-azure-key-vault-and-dbatools/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/creating-azure-sql-database-aad-contained-database-users-with-an-spn-using-powershell-secrets-management-azure-key-vault-and-dbatools/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/08/image-16.png" alt="Featured image of post Creating Azure SQL Database AAD Contained Database Users with an SPN using PowerShell, Secrets Management, Azure Key Vault, and dbatools" /&gt;&lt;p&gt;Following on from my posts about using Secret Management &lt;a class="link" href="https://blog.robsewell.com/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/" target="_blank" rel="noopener"
&gt;Good bye Import-CliXml&lt;/a&gt; and &lt;a class="link" href="https://blog.robsewell.com/using-secret-management-module-to-run-ssms-vs-code-and-azure-data-studio-as-another-user/" target="_blank" rel="noopener"
&gt;running programmes as a different user&lt;/a&gt;, I have another use case.&lt;/p&gt;
&lt;p&gt;After creating Azure SQL Databases in an Elastic Pool using a process pretty similar to this one &lt;a class="link" href="https://blog.robsewell.com/building-azure-sql-db-with-terraform-using-azure-devops/" target="_blank" rel="noopener"
&gt;I blogged about last year&lt;/a&gt;, I needed to be able to programmatically create users and assign permissions.&lt;/p&gt;
&lt;h2 id="i-need-a-user-to-login-with"&gt;I need a user to login with
&lt;/h2&gt;&lt;p&gt;When I created my Azure SQL Server with Terraform, I set the Azure Admin to be a SPN as you can see in the image from the portal and set it to have an identity using the documentation for &lt;a class="link" href="https://www.terraform.io/docs/providers/azurerm/r/sql_server.html" target="_blank" rel="noopener"
&gt;azurerm_mssql_server&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Notifying a Teams Channel of a SQL Agent Job result</title><link>https://blog.robsewell.com/blog/notifying-a-teams-channel-of-a-sql-agent-job-result/</link><pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/notifying-a-teams-channel-of-a-sql-agent-job-result/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/07/image-18.png" alt="Featured image of post Notifying a Teams Channel of a SQL Agent Job result" /&gt;&lt;p&gt;Following on from &lt;a class="link" href="https://blog.robsewell.com/sending-a-sql-agent-job-results-overview-to-a-microsoft-teams-channel/" target="_blank" rel="noopener"
&gt;yesterdays post about creating an overview of SQL Agent Job Results and sending it to a Teams channel&lt;/a&gt;, I was given another challenge&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can you write a job step that I can add to SQL Agent jobs that can send the result of that job to a Teams Channel&lt;/p&gt;
&lt;p&gt;A person with a need&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The use case was for some migration projects that had steps that were scheduled via SQL Agent Jobs and instead of the DBA having to estimate when they would finish and keep checking so that they could let the next team know that it was time for their part to start, they wanted it to notify a Teams channel. This turned out especially useful as the job finished earlier than expected at 3am and the off-shore team could begin their work immediately.&lt;/p&gt;</description></item><item><title>Sending a SQL Agent Job results overview to a Microsoft Teams Channel</title><link>https://blog.robsewell.com/blog/sending-a-sql-agent-job-results-overview-to-a-microsoft-teams-channel/</link><pubDate>Tue, 28 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/sending-a-sql-agent-job-results-overview-to-a-microsoft-teams-channel/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/07/image-11.png" alt="Featured image of post Sending a SQL Agent Job results overview to a Microsoft Teams Channel" /&gt;&lt;p&gt;Microsoft Teams is fantastic for collaboration. It enables groups of people, teams if you like to be able to communicate, collaborate on documents, hold meetings and much much more.&lt;/p&gt;
&lt;h2 id="sql-agent-job-overview"&gt;SQL Agent Job Overview
&lt;/h2&gt;&lt;p&gt;Using &lt;a class="link" href="http://dbatools.io" target="_blank" rel="noopener"
&gt;dbatools&lt;/a&gt; we can create a simple script to gather the results of Agent Jobs form a list of instances. Maybe it would be good to be able to get the job runs results every 12 hours so that at 6am in the morning the early-bird DBA can quickly identify if there are any failures that need immediate action and at 6pm , the team can check that everything was ok before they clock off.&lt;/p&gt;</description></item><item><title>Using Secret Management module to run SSMS, VS Code and Azure Data Studio as another user</title><link>https://blog.robsewell.com/blog/using-secret-management-module-to-run-ssms-vs-code-and-azure-data-studio-as-another-user/</link><pubDate>Mon, 20 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/using-secret-management-module-to-run-ssms-vs-code-and-azure-data-studio-as-another-user/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/07/runas.png" alt="Featured image of post Using Secret Management module to run SSMS, VS Code and Azure Data Studio as another user" /&gt;&lt;p&gt;Following on from &lt;a class="link" href="https://blog.robsewell.com/blog/jupyter%20notebooks/azure%20data%20studio/powershell/dbatools/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/" target="_blank" rel="noopener"
&gt;my last post about the Secret Management module&lt;/a&gt;. I was asked another question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Can I use this to run applications as my admin account?&lt;/p&gt;
&lt;p&gt;A user with a beard&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is good practice to not log into your work station with an account with admin privileges. In many shops, you will need to open applications that can do administration tasks with another set of account credentials.&lt;/p&gt;
&lt;p&gt;Unfortunately, people being people, they will often store their admin account credentials in a less than ideal manner (OneNote, Notepad ++ etc) to make it easier for them, so that when they right click and run as a different user, they can copy and paste the password.&lt;/p&gt;</description></item><item><title>Good Bye Import-CliXML – Use the Secrets Management module for your labs and demos</title><link>https://blog.robsewell.com/blog/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/07/image-1.png" alt="Featured image of post Good Bye Import-CliXML – Use the Secrets Management module for your labs and demos" /&gt;&lt;p&gt;Don’t want to read all this? There are two dotnet interactive notebooks here with the relevant information for you to use.&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://beard.media/dotnetnotebooks" target="_blank" rel="noopener"
&gt;https://beard.media/dotnetnotebooks&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="jaap-is-awesome"&gt;Jaap is awesome
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://pbs.twimg.com/media/DBbP9lHXYAAopb3?format=jpg&amp;amp;name=4096x4096"
loading="lazy"
&gt;&lt;/p&gt;
&lt;p&gt;I have to start here. For the longest time, whenever anyone has asked me how I store my credentials for use in my demos and labs I have always referred them to Jaap Brassers &lt;a class="link" href="https://twitter.com/Jaap_Brasser" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; blog post&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/" target="_blank" rel="noopener"
&gt;https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="joel-is-also-awesome"&gt;Joel is also awesome!
&lt;/h2&gt;&lt;p&gt;When people wanted a method of storing credentials that didn&amp;rsquo;t involve files on disk I would suggest Joel Bennett’s &lt;a class="link" href="https://twitter.com/jaykul" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; module BetterCredentials which uses the Windows Credential Manager&lt;/p&gt;</description></item><item><title>New .NET Notebooks are here – PowerShell 7 notebooks are here.</title><link>https://blog.robsewell.com/blog/new-.net-notebooks-are-here-powershell-7-notebooks-are-here./</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/new-.net-notebooks-are-here-powershell-7-notebooks-are-here./</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/02/image-13.png" alt="Featured image of post New .NET Notebooks are here – PowerShell 7 notebooks are here." /&gt;&lt;p&gt;Data Science folk used Notebooks for documentation and to show re-runnable research. Azure Data Studio included this notebook functionality and &lt;a class="link" href="https://blog.robsewell.com/dbatools/dbachecks/blog/jupyter%20notebooks/azure%20data%20studio/powershell/whats-a-sql-notebook-in-azure-data-studio/" target="_blank" rel="noopener"
&gt;added SQL&lt;/a&gt; kernel where &lt;a class="link" href="https://blog.robsewell.com/blog/jupyter%20notebooks/azure%20data%20studio/powershell/dbachecks/dbatools/powershell-in-sql-notebooks-in-azure-data-studio//" target="_blank" rel="noopener"
&gt;with a little bit of faffing you could run PowerShell&lt;/a&gt; and then a &lt;a class="link" href="https://blog.robsewell.com/blog/jupyter%20notebooks/azure%20data%20studio/powershell/dbatools/powershell-notebooks-in-azure-data-studio/" target="_blank" rel="noopener"
&gt;Python kernel that enabled PowerShell&lt;/a&gt;. It seems that notebooks are so cool that everyone is creating them these days! I was browsing twitter when I saw this tweet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.NET Notebooks Preview 2 is here! Preview 2 includes 🎉&lt;a class="link" href="https://twitter.com/PowerShell_Team?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;@PowerShell_Team&lt;/a&gt;, &lt;a class="link" href="https://twitter.com/nteractio?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;@nteractio&lt;/a&gt;, and a new tool. Check out our blog to learn more. Congratulations to &lt;a class="link" href="https://twitter.com/jonsequitur?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;@jonsequitur&lt;/a&gt; &lt;a class="link" href="https://twitter.com/colombod?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;@colombod&lt;/a&gt; and our entire team&lt;a class="link" href="https://t.co/WqNWQWR3Bo" target="_blank" rel="noopener"
&gt;https://t.co/WqNWQWR3Bo&lt;/a&gt;&lt;a class="link" href="https://twitter.com/dotnet?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;@dotnet&lt;/a&gt; &lt;a class="link" href="https://twitter.com/hashtag/jupyter?src=hash&amp;amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;#jupyter&lt;/a&gt; &lt;a class="link" href="https://twitter.com/hashtag/PowerShell?src=hash&amp;amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;#PowerShell&lt;/a&gt; &lt;a class="link" href="https://twitter.com/hashtag/interactiveprogramming?src=hash&amp;amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;#interactiveprogramming&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>How to fork a GitHub repository and contribute to an open source project</title><link>https://blog.robsewell.com/blog/how-to-fork-a-github-repository-and-contribute-to-an-open-source-project/</link><pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/how-to-fork-a-github-repository-and-contribute-to-an-open-source-project/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/11/CreatePR.png" alt="Featured image of post How to fork a GitHub repository and contribute to an open source project" /&gt;&lt;p&gt;I enjoy maintaining open source GitHub repositories such as &lt;a class="link" href="https://github.com/sqlcollaborative/dbachecks" target="_blank" rel="noopener"
&gt;dbachecks&lt;/a&gt; and &lt;a class="link" href="https://github.com/sqlcollaborative/ADSNotebook" target="_blank" rel="noopener"
&gt;ADSNotebook&lt;/a&gt;. I absolutely love it when people add more functionality to them.&lt;/p&gt;
&lt;p&gt;To collaborate with a repository in GitHub you need to follow these steps&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2019/11/GitHub.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fork the repository into your own GitHub&lt;/li&gt;
&lt;li&gt;Clone the repository to your local machine&lt;/li&gt;
&lt;li&gt;Create a new branch for your changes&lt;/li&gt;
&lt;li&gt;Make some changes and commit them with useful messages&lt;/li&gt;
&lt;li&gt;Push the changes to your repository&lt;/li&gt;
&lt;li&gt;Create a Pull Request from your repository back to the original one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will need to have &lt;code&gt;git.exe&lt;/code&gt; available which you can download and install from &lt;a class="link" href="https://git-scm.com/downloads" target="_blank" rel="noopener"
&gt;https://git-scm.com/downloads&lt;/a&gt; if required&lt;/p&gt;</description></item><item><title>Create a PowerShell Notebook for Azure Data Studio with PowerShell</title><link>https://blog.robsewell.com/blog/create-a-powershell-notebook-for-azure-data-studio-with-powershell/</link><pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/create-a-powershell-notebook-for-azure-data-studio-with-powershell/</guid><description>&lt;p&gt;The latest update to the ADSNotebook PowerShell module &lt;a class="link" href="https://blog.robsewell.com/create-azure-data-studio-sql-notebooks-with-powershell/" target="_blank" rel="noopener"
&gt;I blogged about here&lt;/a&gt; now enables the creation of PowerShell notebooks with PowerShell.&lt;/p&gt;
&lt;p&gt;You can install the module with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Module ADSNotebook
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or if you have already installed it you can use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Update-Module ADSNotebook
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the latest release, there is an extra parameter for &lt;code&gt;New-AdsWorkBook&lt;/code&gt; of &lt;code&gt;-Type&lt;/code&gt; which will accept either SQL or PowerShell&lt;/p&gt;
&lt;h2 id="create-a-powershell-notebook-with-powershell-rob"&gt;Create a PowerShell Notebook with PowerShell Rob
&lt;/h2&gt;&lt;p&gt;OK!&lt;/p&gt;</description></item><item><title>My current VS Code Extensions and using a workspace file</title><link>https://blog.robsewell.com/blog/my-current-vs-code-extensions-and-using-a-workspace-file/</link><pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/my-current-vs-code-extensions-and-using-a-workspace-file/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/11/image-26.png" alt="Featured image of post My current VS Code Extensions and using a workspace file" /&gt;&lt;p&gt;I have been asked a couple of times recently what my Visual Studio Code extensions are at the moment so I thought I would write a quick post and also look at workspaces and how you can enable and disable extensions within them&lt;/p&gt;
&lt;h2 id="listing-extensions"&gt;Listing Extensions
&lt;/h2&gt;&lt;p&gt;From the command line you can list your extensions using&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;code --list-extensions
code-insiders --list-extensions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My list looks like this&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://blog.robsewell.com/assets/uploads/2019/11/image.png?ssl=1" target="_blank" rel="noopener"
&gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2019/11/image.png"
loading="lazy"
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also see them in the view on the left of default Visual Studio Code and open them with CTRL + SHIFT + X (unless like me you have Snagit installed and it has taken that shortcut&lt;/p&gt;</description></item><item><title>PowerShell Notebooks in Azure Data Studio</title><link>https://blog.robsewell.com/blog/powershell-notebooks-in-azure-data-studio/</link><pubDate>Thu, 17 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/powershell-notebooks-in-azure-data-studio/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/10/image-8.png" alt="Featured image of post PowerShell Notebooks in Azure Data Studio" /&gt;&lt;p&gt;The latest release of the &lt;a class="link" href="https://github.com/microsoft/azuredatastudio#try-out-the-latest-insiders-build-from-master" target="_blank" rel="noopener"
&gt;insiders edition of Azure Data Studio&lt;/a&gt; brings the first edition of PowerShell Notebooks!&lt;/p&gt;
&lt;p&gt;You can download the latest insiders edition from the link above, it can be installed alongside the stable release.&lt;/p&gt;
&lt;p&gt;To access many of the commands available use F1 to open the command palette (like many of my tips this also works in Visual Studio Code). You can then start typing to get the command that you want.&lt;/p&gt;</description></item><item><title>Getting SQL Server installation date with PowerShell using dbatools</title><link>https://blog.robsewell.com/blog/getting-sql-server-installation-date-with-powershell-using-dbatools/</link><pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/getting-sql-server-installation-date-with-powershell-using-dbatools/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/10/image-7.png" alt="Featured image of post Getting SQL Server installation date with PowerShell using dbatools" /&gt;&lt;p&gt;Most of my writing time at the moment is devoted to  &lt;em&gt;&lt;a class="link" href="https://dbatools.io/book" target="_blank" rel="noopener"
&gt;Learn dbatools in a Month of Lunches&lt;/a&gt;&lt;/em&gt; which is now available but here is a short post following a question someone asked me.&lt;/p&gt;
&lt;h2 id="how-can-i-get-the-installation-date-for-sql-server-on-my-estate-into-a-database-with-dbatools-"&gt;How can I get the Installation Date for SQL Server on my estate into a database with dbatools ?
&lt;/h2&gt;&lt;p&gt;You can get the date that SQL Server was installed using the creation date of the NT Authority\System login using T-SQL&lt;/p&gt;</description></item><item><title>MEAP MEAP – #dbatoolsMoL – Live Book edition</title><link>https://blog.robsewell.com/blog/meap-meap-dbatoolsmol-live-book-edition/</link><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/meap-meap-dbatoolsmol-live-book-edition/</guid><description>&lt;p&gt;It’s been a busy time!&lt;/p&gt;
&lt;p&gt;As well as many other things, the fantastical &lt;a class="link" href="https://en.wikipedia.org/wiki/Benevolent_dictator_for_life" target="_blank" rel="noopener"
&gt;BDFL&lt;/a&gt; of &lt;a class="link" href="https://dbatools.io" target="_blank" rel="noopener"
&gt;dbatools&lt;/a&gt; Chrissy Lemaire &lt;a class="link" href="https://twitter.com/cl" target="_blank" rel="noopener"
&gt;@cl&lt;/a&gt; and myself have written enough of a chunk of &lt;em&gt;&lt;a class="link" href="https://beard.media/bookblog" target="_blank" rel="noopener"
&gt;Learn dbatools in a Month of Lunches&lt;/a&gt;&lt;/em&gt; that our publisher &lt;a class="link" href="https://beard.media/bookblog" target="_blank" rel="noopener"
&gt;Manning Publications&lt;/a&gt; have agreed to release it as a MEAP. Not a text book, this book is written in a fun conversational style and split up into chapters that you can read in a lunch-time.&lt;/p&gt;</description></item><item><title>PowerShell in SQL Notebooks in Azure Data Studio</title><link>https://blog.robsewell.com/blog/powershell-in-sql-notebooks-in-azure-data-studio/</link><pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/powershell-in-sql-notebooks-in-azure-data-studio/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/07/image-4.png" alt="Featured image of post PowerShell in SQL Notebooks in Azure Data Studio" /&gt;&lt;p&gt;I have done a lot of writing in the last few months but you see no blog posts! My wonderful friend Chrissy and I are writing “dbatools in a Month of Lunches” to be published by Manning. That has taken up a lot of my writing mojo. We have hit a little break whilst we have some reviews done ready for the &lt;a class="link" href="https://www.manning.com/meap-program" target="_blank" rel="noopener"
&gt;MEAP&lt;/a&gt; (For everyone who asks, the answer is the unfulfilling ‘soon’) so it’s time for a blog post!&lt;/p&gt;</description></item><item><title>Azure SQL Linux VM – configuring SQL, installing pwsh and connecting and interacting with dbatools</title><link>https://blog.robsewell.com/blog/azure-sql-linux-vm-configuring-sql-installing-pwsh-and-connecting-and-interacting-with-dbatools/</link><pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/azure-sql-linux-vm-configuring-sql-installing-pwsh-and-connecting-and-interacting-with-dbatools/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-125.png" alt="Featured image of post Azure SQL Linux VM – configuring SQL, installing pwsh and connecting and interacting with dbatools" /&gt;&lt;p&gt;In my posts about using Azure Devops to build Azure resources with Terraform, &lt;a class="link" href="https://blog.robsewell.com/using-the-same-azure-devops-build-steps-for-terraform-with-different-pipelines-with-task-groups/" target="_blank" rel="noopener"
&gt;I built a Linux SQL VM.&lt;/a&gt; I used the &lt;a class="link" href="https://github.com/SQLDBAWithABeard/Presentations-AzureSQLVM" target="_blank" rel="noopener"
&gt;Terraform in this GitHub&lt;/a&gt; repository and created this&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-114.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;h2 id="connecting-with-mobaxterm"&gt;Connecting with MobaXterm
&lt;/h2&gt;&lt;p&gt;I had set the Network security rules to accept connections only from my static IP using variables in the Build Pipeline. I use &lt;a class="link" href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener"
&gt;MobaXterm&lt;/a&gt; as my SSH client. Its a free download. I click on sessions&lt;/p&gt;</description></item><item><title>Generating a Workload against AdventureWorks with PowerShell</title><link>https://blog.robsewell.com/blog/generating-a-workload-against-adventureworks-with-powershell/</link><pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/generating-a-workload-against-adventureworks-with-powershell/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-51.png" alt="Featured image of post Generating a Workload against AdventureWorks with PowerShell" /&gt;&lt;p&gt;For a later blog post I have been trying to generate some workload against an AdventureWorks database.&lt;/p&gt;
&lt;p&gt;I found this excellent blog post by Pieter Vanhove &lt;a class="link" href="https://twitter.com/Pieter_Vanhove" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; &lt;a class="link" href="https://blogs.technet.microsoft.com/msftpietervanhove/2016/01/08/generate-workload-on-your-azure-sql-database/?WT.mc_id=DP-MVP-5002693" target="_blank" rel="noopener"
&gt;https://blogs.technet.microsoft.com/msftpietervanhove/2016/01/08/generate-workload-on-your-azure-sql-database/&lt;/a&gt; which references this 2011 post by Jonathan Kehayias &lt;a class="link" href="https://twitter.com/SQLPoolBoy" target="_blank" rel="noopener"
&gt;t&lt;/a&gt;&lt;br&gt;
&lt;a class="link" href="https://www.sqlskills.com/blogs/jonathan/the-adventureworks2008r2-books-online-random-workload-generator/" target="_blank" rel="noopener"
&gt;https://www.sqlskills.com/blogs/jonathan/the-adventureworks2008r2-books-online-random-workload-generator/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Both of these run a random query in a single thread so I thought I would use &lt;a class="link" href="https://www.powershellgallery.com/packages/PoshRSJob/1.7.4.4" target="_blank" rel="noopener"
&gt;PoshRSJob&lt;/a&gt; by Boe Prox &lt;a class="link" href="https://learn-powershell.net/" target="_blank" rel="noopener"
&gt;b&lt;/a&gt; | &lt;a class="link" href="https://twitter.com/proxb" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; to run multiple queries at the same time 🙂&lt;/p&gt;</description></item><item><title>Whats a SQL Notebook in Azure Data Studio?</title><link>https://blog.robsewell.com/blog/whats-a-sql-notebook-in-azure-data-studio/</link><pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/whats-a-sql-notebook-in-azure-data-studio/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/03/image-7.png" alt="Featured image of post Whats a SQL Notebook in Azure Data Studio?" /&gt;&lt;p&gt;&lt;a class="link" href="https://docs.microsoft.com/en-us/sql/azure-data-studio/download?view=sql-server-2017?WT.mc_id=DP-MVP-5002693" target="_blank" rel="noopener"
&gt;Azure Data Studio&lt;/a&gt; is a cross-platform database tool for data professionals using the Microsoft family of on-premises and cloud data platforms on Windows, MacOS, and Linux.&lt;/p&gt;
&lt;p&gt;Recently Vicky Harp tweeted&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;re getting very close to release of SQL Notebooks in &lt;a class="link" href="https://twitter.com/AzureDataStudio?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;@AzureDataStudio&lt;/a&gt;! You can give the feature an early spin today with the insider build. &lt;a class="link" href="https://t.co/SEZp7ZdxCp" target="_blank" rel="noopener"
&gt;pic.twitter.com/SEZp7ZdxCp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;— Vicky Harp (@vickyharp) &lt;a class="link" href="https://twitter.com/vickyharp/status/1104127412944551936?ref_src=twsrc%5Etfw" target="_blank" rel="noopener"
&gt;March 8, 2019&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By the way, you can watch a recording from SQLBits of Vicky’s session&lt;/p&gt;</description></item><item><title>Using Docker to run Integration Tests for dbachecks</title><link>https://blog.robsewell.com/blog/using-docker-to-run-integration-tests-for-dbachecks/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/using-docker-to-run-integration-tests-for-dbachecks/</guid><description>&lt;p&gt;My wonderful friend &lt;a class="link" href="https://twitter.com/AndreKamman" target="_blank" rel="noopener"
&gt;André Kamman&lt;/a&gt; wrote a fantastic blog post this week &lt;a class="link" href="https://andrekamman.com/sql-server-container-instances-via-cloudshell/" target="_blank" rel="noopener"
&gt;SQL Server Container Instances via Cloudshell&lt;/a&gt; about how he uses containers in Azure to test code against different versions of SQL Server.&lt;/p&gt;
&lt;p&gt;It reminded me that I do something very similar to test &lt;a class="link" href="http://dbachecks.io" target="_blank" rel="noopener"
&gt;dbachecks&lt;/a&gt; code changes. I thought this might make a good blog post. I will talk through how I do this locally as I merge a PR from another great friend &lt;a class="link" href="https://github.com/ClaudioESSilva" target="_blank" rel="noopener"
&gt;Cláudio Silva&lt;/a&gt; who has added &lt;a class="link" href="https://github.com/sqlcollaborative/dbachecks/pull/582" target="_blank" rel="noopener"
&gt;agent job history checks.&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Visual Studio Code Live Sharing Set-Up</title><link>https://blog.robsewell.com/blog/visual-studio-code-live-sharing-set-up/</link><pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/visual-studio-code-live-sharing-set-up/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2018/05/07-sign-in.png" alt="Featured image of post Visual Studio Code Live Sharing Set-Up" /&gt;&lt;p&gt;There was an &lt;a class="link" href="https://code.visualstudio.com/blogs/2018/05/07/live-share-public-preview" target="_blank" rel="noopener"
&gt;announcement on the Visual Studio Code blog&lt;/a&gt; about the public preview of Live Share. This enables you to easily collaborate on code by securely sharing your coding session.&lt;/p&gt;
&lt;p&gt;It is remarkably easy to set up 🙂&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation
&lt;/h2&gt;&lt;p&gt;Open Visual Studio Code, open the Extensions side bar (CTRL + SHIFT + X)&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="assets/uploads/2018/05/01-open-extensions.png" &gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2018/05/01-open-extensions.png"
loading="lazy"
alt="01 - open extensions"
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Search for Live Share&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="assets/uploads/2018/05/02-search.png" &gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2018/05/02-search.png"
loading="lazy"
alt="02 - search.png"
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click Install and then reload when it has done&lt;/p&gt;</description></item><item><title>How to run a PowerShell script file with Verbose, Confirm or WhatIf</title><link>https://blog.robsewell.com/blog/how-to-run-a-powershell-script-file-with-verbose-confirm-or-whatif/</link><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/how-to-run-a-powershell-script-file-with-verbose-confirm-or-whatif/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2018/01/02-Showing-the-results.png" alt="Featured image of post How to run a PowerShell script file with Verbose, Confirm or WhatIf" /&gt;&lt;p&gt;Before you run a PowerShell command that makes a change to something you should check that it is going to do what you expect. You can do this by using the WhatIf parameter for commands that support it. For example, if you wanted to create a New SQL Agent Job Category you would use the &lt;a class="link" href="http://dbatools.io" target="_blank" rel="noopener"
&gt;awesome dbatools module&lt;/a&gt; and write some code like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;New-DbaAgentJobCategory -SqlInstance ROB-XPS -Category 'Backup'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;before you run it, you can check what it is going to do using&lt;/p&gt;</description></item><item><title>Pester 4.2.0 has a Because…… because :-)</title><link>https://blog.robsewell.com/blog/pester-4.2.0-has-a-because-because-/</link><pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/pester-4.2.0-has-a-because-because-/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2018/01/01-Because-1.png" alt="Featured image of post Pester 4.2.0 has a Because…… because :-)" /&gt;&lt;p&gt;I was going through my demo for the &lt;a class="link" href="http://meetu.ps/e/DdYV6/gHMdv/g" target="_blank" rel="noopener"
&gt;South Coast User Group meeting&lt;/a&gt; tonight and decided to add some details about the Because parameter available in the Pester pre-release version 4.2.0.&lt;/p&gt;
&lt;p&gt;To install a pre-release version you need to get the latest  &lt;a class="link" href="https://go.microsoft.com/fwlink/?linkid=846259" target="_blank" rel="noopener"
&gt;PowerShellGet&lt;/a&gt; module. This is pre-installed with PowerShell v6 but for earlier versions open PowerShell as administrator and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Module PowerShellGet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can try out the Pester pre-release version (once you have the latest PowerShellGet) by installing it from the &lt;a class="link" href="http://powershellgallery.com" target="_blank" rel="noopener"
&gt;PowerShell Gallery&lt;/a&gt; with&lt;/p&gt;</description></item><item><title>Using the AST in Pester for dbachecks</title><link>https://blog.robsewell.com/blog/using-the-ast-in-pester-for-dbachecks/</link><pubDate>Mon, 15 Jan 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/using-the-ast-in-pester-for-dbachecks/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2018/01/02-Pester-results-1.png" alt="Featured image of post Using the AST in Pester for dbachecks" /&gt;&lt;p&gt;TagLine – My goal – Chrissy will appreciate Unit Tests one day 🙂&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://dbatools.io/new-module-coming-soon/" target="_blank" rel="noopener"
&gt;Chrissy has written about dbachecks&lt;/a&gt; the new up and coming community driven open source PowerShell module for SQL DBAs to validate their SQL Server estate. we have taken some of the ideas that we have presented about a way of using &lt;a class="link" href="http://dbatools.io" target="_blank" rel="noopener"
&gt;dbatools&lt;/a&gt; with &lt;a class="link" href="https://github.com/Pester/Pester" target="_blank" rel="noopener"
&gt;Pester&lt;/a&gt; to validate that everything is how it should be and placed them into a meta data driven framework to make things easy for anyone to use. It is looking really good and I am really excited about it. It will be released very soon.&lt;/p&gt;</description></item><item><title>Altering a Job Step on Hundreds of SQL Servers with PowerShell</title><link>https://blog.robsewell.com/blog/altering-a-job-step-on-hundreds-of-sql-servers-with-powershell/</link><pubDate>Mon, 13 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/altering-a-job-step-on-hundreds-of-sql-servers-with-powershell/</guid><description>&lt;img src="https://dbatools.io/wp-content/uploads/2016/05/dbatools-logo-1.png" alt="Featured image of post Altering a Job Step on Hundreds of SQL Servers with PowerShell" /&gt;&lt;p&gt;I flew to Utrecht last week to present with &lt;!-- raw HTML omitted --&gt;Chrissy LeMaire&lt;!-- raw HTML omitted --&gt; and &lt;!-- raw HTML omitted --&gt;Sander Stad&lt;!-- raw HTML omitted --&gt; for the joint Dutch SQL and PowerShell User Groups. Whilst I was sat at the airport I got a phone call from my current client.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Them - We need to change the backup path for all of the servers to a different share, how long will it take you?&lt;/p&gt;</description></item><item><title>2016 - That was a Year :-)</title><link>https://blog.robsewell.com/blog/2016-that-was-a-year-/</link><pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/2016-that-was-a-year-/</guid><description>&lt;p&gt;Its the time of year for reflection and I have had the most amazing 2016, I am blessed that I love what I do so much. I thoroughly enjoy writing and talking and sharing and commenting and supporting and cherishing all the SQL and PowerShell things. &lt;a class="link" href="http://sqldbawithabeard.com/2016/10/29/powerbi-and-api-visualising-my-checkins/" target="_blank" rel="noopener"
&gt;I wrote about using Power Bi to display my checkins&lt;/a&gt;. I only started this in June and this is where I have been :-)&lt;/p&gt;</description></item><item><title>Refreshing A SQL Mirrored Database Using Powershell</title><link>https://blog.robsewell.com/blog/refreshing-a-sql-mirrored-database-using-powershell/</link><pubDate>Mon, 25 Aug 2014 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/refreshing-a-sql-mirrored-database-using-powershell/</guid><description>&lt;p&gt;SQL mirroring is a means of providing high availability for your SQL database. It is available in Standard Edition and although the feature is deprecated it is still widely utilised. &lt;a class="link" href="http://msdn.microsoft.com/en-gb/library/ms189852.aspx?WT.mc_id=DP-MVP-5002693" target="_blank" rel="noopener"
&gt;You can read more about it on MSDN here&lt;/a&gt; and &lt;a class="link" href="http://www.brentozar.com/archive/2013/07/database-mirroring-faq/" target="_blank" rel="noopener"
&gt;Jes Borland wrote a useful post answering many questions here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are situations where you may need to refresh these databases. Disaster Recovery is an obvious one but also during development to provide testing or development environments to test your High Availability implementations, run through disaster scenarios, create run books or ensure that the code changes still work with mirroring. There are other scenarios but this post covers the automation of restoring a mirrored database from a backup.&lt;/p&gt;</description></item><item><title>Add User to SQL Server Database Role with PowerShell and Quickly Creating Test Users</title><link>https://blog.robsewell.com/blog/add-user-to-sql-server-database-role-with-powershell-and-quickly-creating-test-users/</link><pubDate>Mon, 23 Sep 2013 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/add-user-to-sql-server-database-role-with-powershell-and-quickly-creating-test-users/</guid><description>&lt;p&gt;There is a newer &lt;a class="link" href="https://blog.robsewell.com/blog/quickly-creating-test-users-in-sql-server-with-powershell-using-the-sqlserver-module-and-dbatools/" target="_blank" rel="noopener"
&gt;up to date version of this post here&lt;/a&gt; using the &lt;a class="link" href="https://dbatools.io" target="_blank" rel="noopener"
&gt;dbatools module&lt;/a&gt; and the sqlserver module&lt;/p&gt;
&lt;p&gt;But if you want to continue with this way read on!!&lt;/p&gt;
&lt;p&gt;Having created &lt;a class="link" href="https://blog.robsewell.com/creating-a-windows-user-and-adding-to-a-sql-server-role-with-powershell/" target="_blank" rel="noopener"
&gt;Windows Users&lt;/a&gt; or &lt;a class="link" href="https://blog.robsewell.com/creating-sql-user-and-adding-to-server-role-with-powershell/" target="_blank" rel="noopener"
&gt;SQL Users&lt;/a&gt; using the last two days posts, today we shall add them to a role on a database.&lt;/p&gt;
&lt;p&gt;As I discussed &lt;a class="link" href="https://blog.robsewell.com/checking-sql-server-user-role-membership-with-powershell/" target="_blank" rel="noopener"
&gt;previously&lt;/a&gt; I believe that to follow good practice I try to ensure that database permissions are granted by role membership and each role is created with the minimum amount of permissions required for successful execution of the task involved.&lt;/p&gt;</description></item></channel></rss>