<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Rob Sewell (aka SQL DBA With A Beard)</title><link>https://blog.robsewell.com/tags/docker/</link><description>Recent content in Docker on Rob Sewell (aka SQL DBA With A Beard)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 19 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.robsewell.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes lab certificates expired</title><link>https://blog.robsewell.com/blog/kubernetes-lab-certificates-expired/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/kubernetes-lab-certificates-expired/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2022/containers.jpg" alt="Featured image of post Kubernetes lab certificates expired" /&gt;&lt;h1 id="it-wont-start"&gt;It won&amp;rsquo;t start!
&lt;/h1&gt;&lt;p&gt;I have a 3 node kubernetes cluster running in my office that I have used for my &lt;a class="link" href="https://azure.microsoft.com/en-gb/services/azure-arc/hybrid-data-services?WT.mc_id=DP-MVP-5002693" target="_blank" rel="noopener"
&gt;Azure Arc-enabled data services&lt;/a&gt; presentations over the last year (&lt;a class="link" href="beard.media/presentations" &gt;Side note, my presentations are here&lt;/a&gt;). A few days ago after a power cut I tried to connect to my cluster with &lt;a class="link" href="https://k8slens.dev/" target="_blank" rel="noopener"
&gt;Lens&lt;/a&gt; and was not able to.&lt;/p&gt;
&lt;p&gt;I tried to run &lt;code&gt;kubectl get nodes&lt;/code&gt; but got no response.&lt;/p&gt;
&lt;h2 id="try-on-the-master-node"&gt;Try on the master node
&lt;/h2&gt;&lt;p&gt;I used my windows terminal profile that ssh&amp;rsquo;s into the master node and ran&lt;/p&gt;</description></item><item><title>GitHub Pages in Dev Containers and Codespaces</title><link>https://blog.robsewell.com/blog/github-pages-in-dev-containers-and-codespaces/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/github-pages-in-dev-containers-and-codespaces/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2022/containers2.jpg" alt="Featured image of post GitHub Pages in Dev Containers and Codespaces" /&gt;&lt;h1 id="broken-link"&gt;Broken Link
&lt;/h1&gt;&lt;p&gt;It started with a message from Mikey Bronowski ( &lt;a class="link" href="https://www.bronowski.it/blog/" target="_blank" rel="noopener"
&gt;Blog&lt;/a&gt; &lt;a class="link" href="https://twitter.com/@MikeyBronowski" target="_blank" rel="noopener"
&gt;Twitter&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2022/07/mikey-dm.png"
loading="lazy"
alt="message from Mikey"
&gt;&lt;/p&gt;
&lt;p&gt;Now this means that you get to see my awesome &lt;a class="link" href="https://blog.robsewell.com/justsomethingsad" target="_blank" rel="noopener"
&gt;404 page &lt;/a&gt; which makes me laugh every time! It is not a very good look though and does not help people who are reading the blog.&lt;/p&gt;
&lt;h2 id="why-do-something-manual-when-you-can-automate-it"&gt;Why do something manual when you can automate it
&lt;/h2&gt;&lt;p&gt;This blog is running on GitHub Pages via a repository. Every time a change is pushed to the repo a GitHub Action runs which rebuilds the jekyll site and makes it available.&lt;/p&gt;</description></item><item><title>Viewing GitHub Pages Locally With a Remote Theme</title><link>https://blog.robsewell.com/blog/viewing-github-pages-locally-with-a-remote-theme/</link><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/viewing-github-pages-locally-with-a-remote-theme/</guid><description>&lt;img src="https://datasaturdays.com/assets/design/twitter/c.twitter%201r.png" alt="Featured image of post Viewing GitHub Pages Locally With a Remote Theme" /&gt;&lt;h1 id="a-different-method-for-my-own-site"&gt;A different method for my own site
&lt;/h1&gt;&lt;p&gt;This blog post is for Mikey Bronowski &lt;a class="link" href="https://twitter.com/mikeybronowski" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; - &lt;a class="link" href="https://www.bronowski.it/blog/" target="_blank" rel="noopener"
&gt;b&lt;/a&gt; and Jonathan Allen &lt;a class="link" href="https://twitter.com/fatherjack" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; - &lt;a class="link" href="https://fatherjack.github.io/" target="_blank" rel="noopener"
&gt;b&lt;/a&gt; after a twitter discussion a few weeks ago.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I see my GitHub Pages site locally when I use a remote theme?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="do-you-need-to"&gt;Do you need to?
&lt;/h2&gt;&lt;p&gt;My first answer is do you need to see them? Once you have your theme set up as you like, you can view your blog in Visual Studio Code using the keyboard shortcut &lt;code&gt;CTRL + K, V&lt;/code&gt; and you can see a live preview of your post as you type.&lt;/p&gt;</description></item><item><title>Viewing GitHub Pages Locally For Data Saturdays</title><link>https://blog.robsewell.com/blog/viewing-github-pages-locally-for-data-saturdays/</link><pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/viewing-github-pages-locally-for-data-saturdays/</guid><description>&lt;img src="https://datasaturdays.com/assets/design/twitter/c.twitter%201r.png" alt="Featured image of post Viewing GitHub Pages Locally For Data Saturdays" /&gt;&lt;h1 id="data-saturdays-has-new-clothes"&gt;Data Saturdays Has New Clothes!
&lt;/h1&gt;&lt;p&gt;The Data Saturdays Admins asked the community to vote on their favourite logo for the Data Saturdays website. After over 400 votes the results came in.&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://twitter.com/datasaturdays/status/1380152923498352644" target="_blank" rel="noopener"
&gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2021/newdatasaturdayclothes.jpg"
loading="lazy"
alt="newclothes"
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Denny Cherry &amp;amp; Associates Consulting &lt;a class="link" href="https://www.dcac.com/" target="_blank" rel="noopener"
&gt;https://www.dcac.com/&lt;/a&gt; generously supported Data Saturdays and paid for the artist to design the logo and create the artifacts via &lt;a class="link" href="https://99designs.com" target="_blank" rel="noopener"
&gt;99designs.com&lt;/a&gt;. THANK YOU Denny and many thanks to Monica Rathbun &lt;a class="link" href="https://twitter.com/SQLEspresso" target="_blank" rel="noopener"
&gt;twitter&lt;/a&gt; - &lt;a class="link" href="https://sqlespresso.com/" target="_blank" rel="noopener"
&gt;blog&lt;/a&gt; for all of the hard work in organising and administering all of the requirements and handling all of the communication with the artists.&lt;/p&gt;</description></item><item><title>Good Bye Import-CliXML – Use the Secrets Management module for your labs and demos</title><link>https://blog.robsewell.com/blog/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/07/image-1.png" alt="Featured image of post Good Bye Import-CliXML – Use the Secrets Management module for your labs and demos" /&gt;&lt;p&gt;Don’t want to read all this? There are two dotnet interactive notebooks here with the relevant information for you to use.&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://beard.media/dotnetnotebooks" target="_blank" rel="noopener"
&gt;https://beard.media/dotnetnotebooks&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="jaap-is-awesome"&gt;Jaap is awesome
&lt;/h2&gt;&lt;p&gt;&lt;img src="https://pbs.twimg.com/media/DBbP9lHXYAAopb3?format=jpg&amp;amp;name=4096x4096"
loading="lazy"
&gt;&lt;/p&gt;
&lt;p&gt;I have to start here. For the longest time, whenever anyone has asked me how I store my credentials for use in my demos and labs I have always referred them to Jaap Brassers &lt;a class="link" href="https://twitter.com/Jaap_Brasser" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; blog post&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/" target="_blank" rel="noopener"
&gt;https://www.jaapbrasser.com/quickly-and-securely-storing-your-credentials-powershell/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="joel-is-also-awesome"&gt;Joel is also awesome!
&lt;/h2&gt;&lt;p&gt;When people wanted a method of storing credentials that didn&amp;rsquo;t involve files on disk I would suggest Joel Bennett’s &lt;a class="link" href="https://twitter.com/jaykul" target="_blank" rel="noopener"
&gt;t&lt;/a&gt; module BetterCredentials which uses the Windows Credential Manager&lt;/p&gt;</description></item><item><title>How to break a SQL 2019 container on my laptop</title><link>https://blog.robsewell.com/blog/how-to-break-a-sql-2019-container-on-my-laptop/</link><pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/how-to-break-a-sql-2019-container-on-my-laptop/</guid><description>&lt;p&gt;Just a very quick post today. At the weekend I blogged about &lt;a class="link" href="https://sqldbawithabeard.com/2019/03/26/persisting-databases-with-named-volumes-on-windows-with-docker-compose/" target="_blank" rel="noopener"
&gt;creating SQL 2019 containers with named volumes enabling&lt;/a&gt; you to persist your data and yesterday about &lt;a class="link" href="https://sqldbawithabeard.com/2019/04/02/generating-a-workload-against-adventureworks-with-PowerShell/" target="_blank" rel="noopener"
&gt;creating a random workload using PowerShell&lt;/a&gt; and a big T-SQL script.&lt;/p&gt;
&lt;p&gt;The interesting thing about creating workload is that you can break things :-)&lt;/p&gt;
&lt;p&gt;When I created a SQL 2019 container with the data files mapped to a directory on my laptops C Drive with a docker-compose like this&lt;/p&gt;</description></item><item><title>Persisting databases with named volumes on Windows with docker compose</title><link>https://blog.robsewell.com/blog/persisting-databases-with-named-volumes-on-windows-with-docker-compose/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/persisting-databases-with-named-volumes-on-windows-with-docker-compose/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/03/image-27.png" alt="Featured image of post Persisting databases with named volumes on Windows with docker compose" /&gt;&lt;p&gt;With all things containers I refer to my good friend Andrew Pruski. Known as &lt;a class="link" href="https://twitter.com/dbafromthecold" target="_blank" rel="noopener"
&gt;dbafromthecold on twitter&lt;/a&gt; he blogs at &lt;a class="link" href="https://dbafromthecold.com/" target="_blank" rel="noopener"
&gt;https://dbafromthecold.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was reading his latest blog post &lt;a class="link" href="https://dbafromthecold.com/2019/03/21/using-docker-named-volumes-to-persist-databases-in-sql-server" target="_blank" rel="noopener"
&gt;Using docker named volumes to persist databases in SQL Server&lt;/a&gt; and decided to give it a try.&lt;/p&gt;
&lt;p&gt;His instructions worked perfectly and I thought I would try them using a docker-compose file as I like the ease of spinning up containers with them.&lt;/p&gt;</description></item><item><title>Using Docker to run Integration Tests for dbachecks</title><link>https://blog.robsewell.com/blog/using-docker-to-run-integration-tests-for-dbachecks/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/using-docker-to-run-integration-tests-for-dbachecks/</guid><description>&lt;p&gt;My wonderful friend &lt;a class="link" href="https://twitter.com/AndreKamman" target="_blank" rel="noopener"
&gt;André Kamman&lt;/a&gt; wrote a fantastic blog post this week &lt;a class="link" href="https://andrekamman.com/sql-server-container-instances-via-cloudshell/" target="_blank" rel="noopener"
&gt;SQL Server Container Instances via Cloudshell&lt;/a&gt; about how he uses containers in Azure to test code against different versions of SQL Server.&lt;/p&gt;
&lt;p&gt;It reminded me that I do something very similar to test &lt;a class="link" href="http://dbachecks.io" target="_blank" rel="noopener"
&gt;dbachecks&lt;/a&gt; code changes. I thought this might make a good blog post. I will talk through how I do this locally as I merge a PR from another great friend &lt;a class="link" href="https://github.com/ClaudioESSilva" target="_blank" rel="noopener"
&gt;Cláudio Silva&lt;/a&gt; who has added &lt;a class="link" href="https://github.com/sqlcollaborative/dbachecks/pull/582" target="_blank" rel="noopener"
&gt;agent job history checks.&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Running Windows and Linux SQL Containers together</title><link>https://blog.robsewell.com/blog/running-windows-and-linux-sql-containers-together/</link><pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/running-windows-and-linux-sql-containers-together/</guid><description>&lt;p&gt;Just for fun I decided to spend Christmas Eve getting Windows and Linux SQL containers running together.&lt;/p&gt;
&lt;h2 id="warning"&gt;WARNING
&lt;/h2&gt;&lt;p&gt;This is NOT a production ready solution, in fact I would not even recommend that you try it.&lt;br&gt;
I definitely wouldn’t recommend it on any machine with anything useful on it that you want to use again.&lt;br&gt;
We will be using a re-compiled dockerd.exe created by someone else and you know the rules about downloading things from the internet don’t you? and trusting unknown unverified people?&lt;/p&gt;</description></item><item><title>Creating SQL Server Containers for versions 2012-2017</title><link>https://blog.robsewell.com/blog/creating-sql-server-containers-for-versions-2012-2017/</link><pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/creating-sql-server-containers-for-versions-2012-2017/</guid><description>&lt;p&gt;I am working on my &lt;a class="link" href="http://dbatools.io" target="_blank" rel="noopener"
&gt;dbatools&lt;/a&gt; and &lt;a class="link" href="http://dbachecks.io" target="_blank" rel="noopener"
&gt;dbachecks&lt;/a&gt; presentations for &lt;a class="link" href="http://www.sqlsaturday.com/735/eventhome.aspx" target="_blank" rel="noopener"
&gt;SQL Saturday Finland&lt;/a&gt;, &lt;a class="link" href="https://sqlday.pl/" target="_blank" rel="noopener"
&gt;SQLDays&lt;/a&gt;, &lt;a class="link" href="http://www.sqlsaturday.com/742/EventHome.aspx" target="_blank" rel="noopener"
&gt;SQL Saturday Cork&lt;/a&gt; and &lt;a class="link" href="https://sqlgrillen.de/" target="_blank" rel="noopener"
&gt;SQLGrillen&lt;/a&gt; I want to show the two modules running against a number of SQL Versions so I have installed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 Domain Controllers&lt;/li&gt;
&lt;li&gt;2 SQL 2017 instances on Windows 2016 with an Availability Group and WideWorldImporters database&lt;/li&gt;
&lt;li&gt;1 Windows 2016 jump box with all the programmes I need&lt;/li&gt;
&lt;li&gt;1 Windows 2016 with containers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;using a VSTS build and this set of &lt;a class="link" href="https://github.com/SQLDBAWithABeard/ARMTemplates/tree/master/DeployAlwaysOn" target="_blank" rel="noopener"
&gt;ARM templates and scripts&lt;/a&gt;&lt;/p&gt;</description></item><item><title>dbatools with SQL on Docker and running SQL queries</title><link>https://blog.robsewell.com/blog/dbatools-with-sql-on-docker-and-running-sql-queries/</link><pubDate>Tue, 07 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/dbatools-with-sql-on-docker-and-running-sql-queries/</guid><description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;$srv.Query($Query)&lt;/p&gt;
&lt;p&gt;$srv.Query($Query).column1&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description></item></channel></rss>