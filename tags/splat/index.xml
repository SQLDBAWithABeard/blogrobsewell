<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splat on Rob Sewell (aka SQL DBA With A Beard)</title><link>https://blog.robsewell.com/tags/splat/</link><description>Recent content in Splat on Rob Sewell (aka SQL DBA With A Beard)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 11 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.robsewell.com/tags/splat/index.xml" rel="self" type="application/rss+xml"/><item><title>Easily Splatting PowerShell with VS Code</title><link>https://blog.robsewell.com/blog/easily-splatting-powershell-with-vs-code/</link><pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/easily-splatting-powershell-with-vs-code/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2022/dbachecks.jpg" alt="Featured image of post Easily Splatting PowerShell with VS Code" /&gt;&lt;p&gt;So I always like to show splatting PowerShell commands when I am presenting sessions or workshops and realised that I had not really blogged about it. (This blog is for &lt;a class="link" href="https://twitter.com/dbafromthecold" target="_blank" rel="noopener"
&gt;@dbafromthecold&lt;/a&gt; who asked me to ðŸ™‚ )&lt;/p&gt;
&lt;h2 id="what-is-splatting"&gt;What is Splatting?
&lt;/h2&gt;&lt;p&gt;Well you will know that when you call a PowerShell function you can use intellisense to get the parameters and sometimes the parameter values as well. This can leave you with a command that looks like this on the screen&lt;/p&gt;</description></item></channel></rss>