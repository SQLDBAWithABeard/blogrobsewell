<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sqlserver on Rob Sewell (aka SQL DBA With A Beard)</title><link>https://blog.robsewell.com/tags/sqlserver/</link><description>Recent content in Sqlserver on Rob Sewell (aka SQL DBA With A Beard)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 30 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.robsewell.com/tags/sqlserver/index.xml" rel="self" type="application/rss+xml"/><item><title>Handling Missing Instances when Looping with Pester</title><link>https://blog.robsewell.com/blog/handling-missing-instances-when-looping-with-pester/</link><pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/handling-missing-instances-when-looping-with-pester/</guid><description>&lt;p&gt;In my previous posts about &lt;a class="link" href="https://blog.robsewell.com/write-your-first-pester-test-today/" target="_blank" rel="noopener"
&gt;writing your first Pester Test&lt;/a&gt; and &lt;a class="link" href="https://blog.robsewell.com/2-ways-to-loop-through-collections-in-pester/" target="_blank" rel="noopener"
&gt;looping through instances&lt;/a&gt; I described how you can start to validate that your SQL Server is how YOU want it to be.&lt;/p&gt;
&lt;h2 id="unavailable-machines"&gt;Unavailable machines
&lt;/h2&gt;&lt;p&gt;Once you begin to have a number of tests for a number of instances you want to be able to handle any machines that are not available cleanly otherwise you might end up with something like this.&lt;/p&gt;</description></item><item><title>2 Ways to Loop through collections in Pester</title><link>https://blog.robsewell.com/blog/2-ways-to-loop-through-collections-in-pester/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/2-ways-to-loop-through-collections-in-pester/</guid><description>&lt;p&gt;In my last post I showed you &lt;a class="link" href="https://blog.robsewell.com/write-your-first-pester-test-today/" target="_blank" rel="noopener"
&gt;how to write your first Pester test&lt;/a&gt; to validate something. Here’s a recap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Decide the information you wish to test&lt;/li&gt;
&lt;li&gt;Understand how to get it with PowerShell&lt;/li&gt;
&lt;li&gt;Understand what makes it pass and what makes it fail&lt;/li&gt;
&lt;li&gt;Write a Pester Test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You probably have more than one instance that you want to test, so how do you loop through a collection of instances? There are a couple of ways.&lt;/p&gt;</description></item><item><title>2 Ways to Loop through collections in Pester</title><link>https://blog.robsewell.com/blog/2-ways-to-loop-through-collections-in-pester/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/2-ways-to-loop-through-collections-in-pester/</guid><description>&lt;p&gt;In my last post I showed you &lt;a class="link" href="https://blog.robsewell.com/write-your-first-pester-test-today/" target="_blank" rel="noopener"
&gt;how to write your first Pester test&lt;/a&gt; to validate something. Here’s a recap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Decide the information you wish to test&lt;/li&gt;
&lt;li&gt;Understand how to get it with PowerShell&lt;/li&gt;
&lt;li&gt;Understand what makes it pass and what makes it fail&lt;/li&gt;
&lt;li&gt;Write a Pester Test&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You probably have more than one instance that you want to test, so how do you loop through a collection of instances? There are a couple of ways.&lt;/p&gt;</description></item><item><title>#TSQL2sDay – Get-PostRoundup</title><link>https://blog.robsewell.com/blog/tsql2sday-get-postroundup/</link><pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/tsql2sday-get-postroundup/</guid><description>&lt;!-- raw HTML omitted --&gt;</description></item><item><title>#TSQL2sDay – Starting Out with PowerShell</title><link>https://blog.robsewell.com/blog/tsql2sday-starting-out-with-powershell/</link><pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/tsql2sday-starting-out-with-powershell/</guid><description>&lt;!-- raw HTML omitted --&gt;</description></item><item><title>PowerShell CMDLets added for SQL2016 Always Encrypted</title><link>https://blog.robsewell.com/blog/powershell-cmdlets-added-for-sql2016-always-encrypted/</link><pubDate>Thu, 30 Jun 2016 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/powershell-cmdlets-added-for-sql2016-always-encrypted/</guid><description>&lt;p&gt;&lt;a class="link" href="https://blogs.technet.microsoft.com/dataplatforminsider/2016/06/30/sql-PowerShell-july-2016-update/" target="_blank" rel="noopener"
&gt;The post on the SQLServer blog at TechNet by the SQL Server Tools Team today&lt;/a&gt; made me jump out of my seat.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The July update for SSMS includes the first substantial improvement in SQL PowerShell in many years. We owe a lot of thanks for this effort to the great collaboration with our community. We have several new CMDLETs to share with you&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In one release there are &lt;strong&gt;twenty-five&lt;/strong&gt; new CMDLets for the new sqlserver module&lt;/p&gt;</description></item></channel></rss>