<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform on Rob Sewell (aka SQL DBA With A Beard)</title><link>https://blog.robsewell.com/tags/terraform/</link><description>Recent content in Terraform on Rob Sewell (aka SQL DBA With A Beard)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 20 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.robsewell.com/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>When WSL DNS fails you</title><link>https://blog.robsewell.com/blog/when-wsl-dns-fails-you/</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/when-wsl-dns-fails-you/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2023/wsl-dns-fail.png" alt="Featured image of post When WSL DNS fails you" /&gt;&lt;h1 id="so-that-i-will-remember"&gt;So that I will remember!
&lt;/h1&gt;&lt;p&gt;When running WSL in a corporate environment, I sometimes an error like the following, where the cli is not able to resolve the IP address correctly. This error is from terraform but I have seen it elsewhere.&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="../assets/uploads/2023/wsl-dns-fail.png" &gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2023/wsl-dns-fail.png"
loading="lazy"
alt="wsl-dns-resolve"
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;╷
│ Error: Failed to query available provider packages
│
│ Could not retrieve the list of available versions for provider hashicorp/random: could not connect to registry.terraform.io: failed to request discovery document: Get
│ &amp;ldquo;&lt;a class="link" href="https://registry.terraform.io/.well-known/terraform.json%22" target="_blank" rel="noopener"
&gt;https://registry.terraform.io/.well-known/terraform.json"&lt;/a&gt;: dial tcp: lookup registry.terraform.io on 123.45.67.89:53: read udp 123.45.67.89:51522-&amp;gt;123.45.67.89:53: i/o timeout&lt;/p&gt;</description></item><item><title>How to download terraform providers</title><link>https://blog.robsewell.com/blog/how-to-download-terraform-providers/</link><pubDate>Thu, 17 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/how-to-download-terraform-providers/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2023/terraform.png" alt="Featured image of post How to download terraform providers" /&gt;&lt;h1 id="so-that-i-will-remember"&gt;So that I will remember!
&lt;/h1&gt;&lt;p&gt;It took me too long to find this. The google-fu was failing. How to download terraform providers. How can I download terraform providers. Downloading terraform providers. Getting terraform providers locally. I even checked for my favourite misspelling!&lt;/p&gt;
&lt;p&gt;&lt;a class="link" href="../assets/uploads/2023/terraform.png" &gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2023/terraform.png"
loading="lazy"
alt="terrafrom"
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;but actually the answer to downloading the terraform providers locally for the mirror is in the documentation &lt;a class="link" href="https://developer.hashicorp.com/terraform/cli/commands/providers/mirror" target="_blank" rel="noopener"
&gt;https://developer.hashicorp.com/terraform/cli/commands/providers/mirror&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;terraform providers mirror&lt;/code&gt; command downloads the providers required for the current configuration and copies them into a directory in the local filesystem.&lt;/p&gt;</description></item><item><title>Creating Azure SQL Database AAD Contained Database Users with an SPN using PowerShell, Secrets Management, Azure Key Vault, and dbatools</title><link>https://blog.robsewell.com/blog/creating-azure-sql-database-aad-contained-database-users-with-an-spn-using-powershell-secrets-management-azure-key-vault-and-dbatools/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/creating-azure-sql-database-aad-contained-database-users-with-an-spn-using-powershell-secrets-management-azure-key-vault-and-dbatools/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2020/08/image-16.png" alt="Featured image of post Creating Azure SQL Database AAD Contained Database Users with an SPN using PowerShell, Secrets Management, Azure Key Vault, and dbatools" /&gt;&lt;p&gt;Following on from my posts about using Secret Management &lt;a class="link" href="https://blog.robsewell.com/good-bye-import-clixml-use-the-secrets-management-module-for-your-labs-and-demos/" target="_blank" rel="noopener"
&gt;Good bye Import-CliXml&lt;/a&gt; and &lt;a class="link" href="https://blog.robsewell.com/using-secret-management-module-to-run-ssms-vs-code-and-azure-data-studio-as-another-user/" target="_blank" rel="noopener"
&gt;running programmes as a different user&lt;/a&gt;, I have another use case.&lt;/p&gt;
&lt;p&gt;After creating Azure SQL Databases in an Elastic Pool using a process pretty similar to this one &lt;a class="link" href="https://blog.robsewell.com/building-azure-sql-db-with-terraform-using-azure-devops/" target="_blank" rel="noopener"
&gt;I blogged about last year&lt;/a&gt;, I needed to be able to programmatically create users and assign permissions.&lt;/p&gt;
&lt;h2 id="i-need-a-user-to-login-with"&gt;I need a user to login with
&lt;/h2&gt;&lt;p&gt;When I created my Azure SQL Server with Terraform, I set the Azure Admin to be a SPN as you can see in the image from the portal and set it to have an identity using the documentation for &lt;a class="link" href="https://www.terraform.io/docs/providers/azurerm/r/sql_server.html" target="_blank" rel="noopener"
&gt;azurerm_mssql_server&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Azure SQL Linux VM – configuring SQL, installing pwsh and connecting and interacting with dbatools</title><link>https://blog.robsewell.com/blog/azure-sql-linux-vm-configuring-sql-installing-pwsh-and-connecting-and-interacting-with-dbatools/</link><pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/azure-sql-linux-vm-configuring-sql-installing-pwsh-and-connecting-and-interacting-with-dbatools/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-125.png" alt="Featured image of post Azure SQL Linux VM – configuring SQL, installing pwsh and connecting and interacting with dbatools" /&gt;&lt;p&gt;In my posts about using Azure Devops to build Azure resources with Terraform, &lt;a class="link" href="https://blog.robsewell.com/using-the-same-azure-devops-build-steps-for-terraform-with-different-pipelines-with-task-groups/" target="_blank" rel="noopener"
&gt;I built a Linux SQL VM.&lt;/a&gt; I used the &lt;a class="link" href="https://github.com/SQLDBAWithABeard/Presentations-AzureSQLVM" target="_blank" rel="noopener"
&gt;Terraform in this GitHub&lt;/a&gt; repository and created this&lt;/p&gt;
&lt;p&gt;&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-114.png"
loading="lazy"
&gt;&lt;/p&gt;
&lt;h2 id="connecting-with-mobaxterm"&gt;Connecting with MobaXterm
&lt;/h2&gt;&lt;p&gt;I had set the Network security rules to accept connections only from my static IP using variables in the Build Pipeline. I use &lt;a class="link" href="https://mobaxterm.mobatek.net/" target="_blank" rel="noopener"
&gt;MobaXterm&lt;/a&gt; as my SSH client. Its a free download. I click on sessions&lt;/p&gt;</description></item><item><title>Using Azure DevOps Build Pipeline Templates with Terraform to build an AKS cluster</title><link>https://blog.robsewell.com/blog/using-azure-devops-build-pipeline-templates-with-terraform-to-build-an-aks-cluster/</link><pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/using-azure-devops-build-pipeline-templates-with-terraform-to-build-an-aks-cluster/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-151.png" alt="Featured image of post Using Azure DevOps Build Pipeline Templates with Terraform to build an AKS cluster" /&gt;&lt;p&gt;In the last few posts I have moved from &lt;a class="link" href="https://blog.robsewell.com/building-azure-sql-db-with-terraform-with-visual-studio-code/" target="_blank" rel="noopener"
&gt;building an Azure SQL DB with Terraform using VS Code&lt;/a&gt; to &lt;a class="link" href="https://blog.robsewell.com/building-azure-sql-db-with-terraform-using-azure-devops/" target="_blank" rel="noopener"
&gt;automating the build process for the Azure SQL DB using Azure DevOps Build Pipelines&lt;/a&gt; to &lt;a class="link" href="https://blog.robsewell.com/using-the-same-azure-devops-build-steps-for-terraform-with-different-pipelines-with-task-groups/" target="_blank" rel="noopener"
&gt;using Task Groups in Azure DevOps to reuse the same Build Process and build an Azure Linux SQL VM and Network Security Group&lt;/a&gt;. This evolution is fantastic but Task Groups can only be used in the same Azure DevOps repository. It would be brilliant if I could use Configuration as Code for the Azure Build Pipeline and store that in a separate source control repository which can be used from any Azure DevOps Project.&lt;/p&gt;</description></item><item><title>Using the same Azure DevOps build steps for Terraform with different Pipelines with Task Groups to build an Azure Linux SQL VM</title><link>https://blog.robsewell.com/blog/using-the-same-azure-devops-build-steps-for-terraform-with-different-pipelines-with-task-groups-to-build-an-azure-linux-sql-vm/</link><pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/using-the-same-azure-devops-build-steps-for-terraform-with-different-pipelines-with-task-groups-to-build-an-azure-linux-sql-vm/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-107.png" alt="Featured image of post Using the same Azure DevOps build steps for Terraform with different Pipelines with Task Groups to build an Azure Linux SQL VM" /&gt;&lt;p&gt;In my &lt;a class="link" href="https://blog.robsewell.com/building-azure-sql-db-with-terraform-using-azure-devops/" target="_blank" rel="noopener"
&gt;last post&lt;/a&gt; I showed how to build an Azure DevOps Pipeline for a Terraform build of an Azure SQLDB. This will take the terraform code and build the required infrastructure.&lt;/p&gt;
&lt;p&gt;The plan all along has been to enable me to build &lt;em&gt;different&lt;/em&gt; environments depending on the requirement. Obviously I can repeat the steps from the last post for a new repository containing a Terraform code for a different environment but&lt;/p&gt;</description></item><item><title>Building Azure SQL Db with Terraform using Azure DevOps</title><link>https://blog.robsewell.com/blog/building-azure-sql-db-with-terraform-using-azure-devops/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/building-azure-sql-db-with-terraform-using-azure-devops/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-49.png" alt="Featured image of post Building Azure SQL Db with Terraform using Azure DevOps" /&gt;&lt;p&gt;In &lt;a class="link" href="https://blog.robsewell.com/building-azure-sql-db-with-terraform-with-visual-studio-code/" target="_blank" rel="noopener"
&gt;my last post&lt;/a&gt; I showed how to create a Resource Group and an Azure SQL Database with Terraform using Visual Studio Code to deploy.&lt;/p&gt;
&lt;p&gt;Of course, I haven&amp;rsquo;t stopped there, who wants to manually run code to create things. There was a lot of install this and set up that. I would rather give the code to a build system and get it to run it. I can then even set it to automatically deploy new infrastructure when I commit some code to alter the configuration.&lt;/p&gt;</description></item><item><title>Building Azure SQL Db with Terraform with Visual Studio Code</title><link>https://blog.robsewell.com/blog/building-azure-sql-db-with-terraform-with-visual-studio-code/</link><pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate><guid>https://blog.robsewell.com/blog/building-azure-sql-db-with-terraform-with-visual-studio-code/</guid><description>&lt;img src="https://blog.robsewell.com/assets/uploads/2019/04/image-42.png" alt="Featured image of post Building Azure SQL Db with Terraform with Visual Studio Code" /&gt;&lt;p&gt;I have been using &lt;a class="link" href="https://www.terraform.io/" target="_blank" rel="noopener"
&gt;Terraform&lt;/a&gt; for the last week or so to create some infrastructure and decided to bring that knowledge back to a problem that I and others suffer from – building environments for presentations, all for the sake of doing some learning.&lt;/p&gt;
&lt;h2 id="what-is-terraform"&gt;What is Terraform?
&lt;/h2&gt;&lt;p&gt;According to the website&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HashiCorp Terraform enables you to safely and predictably create, change, and improve infrastructure. It is an open source tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned&lt;/p&gt;</description></item></channel></rss>